{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","videoUrl","setVideoUrl","video","useRef","hls","Hls","loadSource","attachMedia","current","on","Events","MANIFEST_PARSED","play","className","onChange","event","target","value","style","marginBottom","padding","defaultValue","disabled","data","streams","map","url","source","name","id","ref","autoPlay","controls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAyCeA,MApCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,KAEPC,EAAQC,iBAAO,MACfC,EAAM,IAAIC,IAOhB,OANAD,EAAIE,WAAWN,GACfI,EAAIG,YAAYL,EAAMM,SACtBJ,EAAIK,GAAGJ,IAAIK,OAAOC,iBAAiB,WACjCT,EAAMM,QAAQI,UAId,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,2DACA,yBACEC,SAAU,SAACC,GACTd,EAAYc,EAAMC,OAAOC,QAE3BC,MAAO,CAAEC,aAAc,GAAIC,QAAS,IACpCC,aAAa,UALf,UAOE,wBAAQJ,MAAM,UAAUK,UAAQ,EAAhC,yBAGCC,EAAKC,QAAQC,KAAI,SAACC,GAAD,OAChB,wBAAqBT,MAAOS,EAAIC,OAAhC,SACGD,EAAIE,MADMF,EAAIG,UAKrB,uBAAOC,IAAK5B,EAAO6B,UAAU,EAAMC,UAAQ,EAACnB,UAAU,sBCvB/CoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9410a505.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\nimport Hls from \"hls.js\";\nimport data from \"./data.json\";\nimport \"./App.css\";\n\nfunction App() {\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const video = useRef(null);\n  const hls = new Hls();\n  hls.loadSource(videoUrl);\n  hls.attachMedia(video.current);\n  hls.on(Hls.Events.MANIFEST_PARSED, function () {\n    video.current.play();\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Please choose your stream</h2>\n        <select\n          onChange={(event) => {\n            setVideoUrl(event.target.value);\n          }}\n          style={{ marginBottom: 50, padding: 10 }}\n          defaultValue=\"default\"\n        >\n          <option value=\"default\" disabled>\n            Choose here\n          </option>\n          {data.streams.map((url) => (\n            <option key={url.id} value={url.source}>\n              {url.name}\n            </option>\n          ))}\n        </select>\n        <video ref={video} autoPlay={true} controls className=\"videoPlayer\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}